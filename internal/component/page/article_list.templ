package page

import "github.com/solsteace/misite/internal/entity"
import "fmt"
import "time"
import "strings"
import "github.com/solsteace/misite/internal/component/utility"

templ ArticleList(article []entity.ArticleList, topTags []int) {
    <div class="explore-layout">
        <div class="explore-layout__left articles__exploration" > 
            <section> SEARCH FUNCTIONALITY HERE </section>
            <section>
                <b class="articles__tags-header"> # </b>
                <nav 
                    class="articles__tags"
                    hx-get={fmt.Sprintf(
                        "/tags?by=article&%s", 
                        strings.Join(mapIntToString(topTags, "tagId="), "&"))}
                    hx-trigger="load"
                    hx-replace-url="false"
                    hx-push-url="false"
                    hx-swap="innerHTML"
                > <p> Loading... </p> </nav>
            </section>
        </div>

        <div
            hx-target="#page"
            hx-swap="innerHTML"
            class="explore-layout__right"
        > 
            for idx, a := range article {
                <div 
                    class="list-entry-component"
                    hx-trigger="click"
                    hx-get={fmt.Sprintf("/article/%d", a.Id)}
                >
                    <div class="list-entry-component__data articles-entry">
                        <div class="articles-entry__serie-and-timestamp util--dim">
                            <div>
                                if diff := time.Now().Sub(a.CreatedAt); diff < time.Hour*24*14 {
                                    <p> {fmt.Sprintf("%.0f", diff.Hours() / 24)} days ago </p>
                                } else if diff < time.Hour*24*365{
                                    <p> {a.CreatedAt.Format("Jan 02")} </p>
                                } else {
                                    <p> {a.CreatedAt.Format("Jan 02, 2006")}</p>
                                }
                            </div>

                            if a.Serie != nil {
                                <div class="articles-entry__serie">
                                    <p> Â· In </p>
                                    <a 
                                        class="articles-entry__serie-link"
                                        href={fmt.Sprintf("/serie/%d", a.Serie.Id)}
                                        hx-trigger="click consume"
                                        hx-get={fmt.Sprintf("/serie/%d", a.Serie.Id)}
                                        hx-target="#page"
                                        hx-swap="innerHTML"
                                        hx-replace-url="true"
                                        hx-push-url="true"
                                    >
                                        {a.Serie.Name} 
                                    </a> 
                                </div>
                            }
                        </div>

                        <div class="articles-entry__title-subtitle">
                            <p class="u__h u__h--4"> {a.Title} </p>
                            <p class="articles-entry__subtitle"> 
                                if truncIdx := 140; len(a.Subtitle) > truncIdx {
                                    {a.Subtitle[:truncIdx]}...
                                }  else {
                                    {a.Subtitle}
                                }
                            </p>
                        </div>

                        if len(a.Tag) > 0 {
                            <section>
                                <ul class="badges">
                                    for _, t := range a.Tag {
                                        <li class="badge-item"> 
                                            <a
                                                class="badge-item__link"
                                                hx-trigger="click consume"
                                                hx-target="#page"
                                                hx-get={fmt.Sprintf("%s?tagId=%d", utility.ExploreArticleUrl, t.Id)}
                                                href= {fmt.Sprintf("%s?tagId=%d", utility.ExploreArticleUrl, t.Id)} 
                                            >
                                                {t.Name}
                                            </a> 
                                        </li>
                                    }
                                </ul>
                            </section>
                        }

                    </div>
                    <div class="list-entry-component__thumbnail">
                        <img src={a.Thumbnail}>
                    </div>
                </div>

                if idx < len(article) - 1 {
                    <div class="list-entry-component__delimiter"> </div>
                }
            }
        </div>
    </div>
}