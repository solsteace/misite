package page

import "github.com/solsteace/misite/internal/entity"
import "fmt"
import "strconv"
import "strings"

func mapIntToString(ints []int, prefix string) []string {
    var sInts []string
    for _, i := range ints {
        sInt := fmt.Sprintf("%s%s", prefix, strconv.Itoa(i))
        sInts = append(sInts, sInt)
    }
    return sInts
}

templ ProjectList(project []entity.Project, topTags []int) {
    <div class="explore-layout" >
        <div 
            class="explore-layout__left projects__exploration"
            hx-get={fmt.Sprintf(
                "/tags?by=project&%s", 
                strings.Join(mapIntToString(topTags, "tagId="), "&"))}
            hx-trigger="load"
            hx-replace-url="false"
            hx-push-url="false"
            hx-target="#tags-in-projects"
            hx-swap="innerHTML"
        > 
            <section> SEARCH FUNCTIONALITY HERE </section>
            <section>
                <b class="projects__tags-header"> # </b>
                <nav id="tags-in-projects" class="projects__tags"> <p> Loading... </p> </nav>
            </section>
        </div>

        <div
            hx-target="#target"
            hx-swap="innerHTML"
            class="explore-layout__right"
        > 
            for idx, p := range project {
                <div 
                    class="list-entry-component"
                    hx-trigger="click"
                    hx-get={fmt.Sprintf("/project/%d", p.Id)}
                >
                    <div class="list-entry-component__data projects-entry">
                        <p class="projects-entry__title"> {p.Name} </p>
                        <p> 
                            if truncIdx := 220; len(p.Synopsis) > truncIdx {
                                {p.Synopsis[:truncIdx]}...
                            }  else {
                                {p.Synopsis}
                            }
                        </p>

                        if len(p.Tag) > 0 {
                            <div class="badges">
                                for _, t := range p.Tag {
                                    <div class="badge-item"> {t.Name} </div>
                                }
                            </div>
                        }
                    </div>

                    <div class="list-entry-component__thumbnail">
                        <img src={p.Thumbnail}>
                    </div>
                </div>

                if idx < len(project) - 1 {
                    <div class="list-entry-component__delimiter"> </div>
                }
            }
        </div>
    </div>
}