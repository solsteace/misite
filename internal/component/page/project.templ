package page

import "github.com/solsteace/misite/internal/entity"
import "fmt"
import "github.com/solsteace/misite/internal/component/utility"

func newProjectHTMLIdentifier() string {
    return "main-project"
}

templ onProject() {
    @templ.JSUnsafeFuncCall(` window.scroll({ top: 0, left: 0, behavior: "smooth" })`)
    @templ.JSUnsafeFuncCall(makeOutlineExpr(
        newProjectHTMLIdentifier(), 
        fmt.Sprintf("outline-%s", newProjectHTMLIdentifier())))
}

templ Project(project entity.Project) {
    <div class="specification-layout">
        <div class="specification-layout-top">
            <section class="project-header">
                <h1> {project.Name} </h1>
                <p> {project.Synopsis} </p>
                <section>
                    <ul class="badges">
                        for _, t := range project.Tag {
                            <li class="badge-item"> 
                                <a
                                    class="badge-item__link"
                                    hx-trigger="click consume"
                                    hx-target="#page"
                                    hx-get={fmt.Sprintf("%s?tagId=%d", utility.ExploreProjectUrl, t.Id)}
                                    href= {fmt.Sprintf("%s?tagId=%d", utility.ExploreProjectUrl, t.Id)} 
                                >
                                    {t.Name}
                                </a> 
                            </li>
                        }
                    </ul>
                </section>
            </section>

            <section class="specification-layout-top__thumbnail">
                <img src={project.Thumbnail}/>
            </section>
        </div>

        <div class="specification-layout-bottom">
            <div class="specification-layout-bottom--left" > 
                <nav class="project-links">
                    <b class="project-links__header"> Links </b>
                    if project.Serie != nil {
                        <p> Featured in 
                            <a
                                class="util--dim"
                                hx-get={fmt.Sprintf("/serie/%d", project.Serie.Id)}
                                hx-trigger="click"
                                hx-target="#page"
                                hx-push-url="true"
                                hx-replace-url="true"
                                hx-swap="innerHTML"
                            > {project.Serie.Name} </a>
                        </p>
                    }

                    if len(project.Link) > 0 {
                        for _, l := range project.Link {
                            <a href={l.Url}> {l.DisplayText} </a>
                        }
                    }
                </nav>

                <nav class="project-navigation-wrapper">
                    <nav 
                        class="project-navigation"
                        id={fmt.Sprintf("outline-%s", newProjectHTMLIdentifier())}
                    > 
                        <b class="project-navigation__header"> Outline </b>
                    </nav>
                </nav>
            </div>

            <article 
                class="specification-layout-bottom--right project-content" 
                id={newProjectHTMLIdentifier()}
            >
                @templ.Raw(project.Description)

                // temporary placeholder
                for i := 1;  i < 100; i++ {
                    <p> hsldaldajld </p>
                }
            </article>

            @onProject()
        </div>
    </div>
}