package page

import "github.com/solsteace/misite/internal/entity"
import "fmt"
import "github.com/solsteace/misite/internal/component/utility"

func newProjectHTMLIdentifier() string {
    return "main-project"
}

templ onProject() {
    @templ.JSUnsafeFuncCall(` window.scroll({ top: 0, left: 0, behavior: "smooth" })`)
    @templ.JSUnsafeFuncCall(makeOutlineExpr(
        newProjectHTMLIdentifier(), 
        fmt.Sprintf("outline-%s", newProjectHTMLIdentifier())))
}

templ Project(project entity.Project) {
    <div class="specification">
        <section class="specification__header">
            <div class="specification__aside u__dim">
                if project.Serie != nil {
                    <p> Featured in </p>
                    <p class="article-entry__serie-link" >
                        {project.Serie.Name} 
                    </p> 
                }
            </div>

            <div>
                <h1> {project.Name} </h1>
                <p> {project.Synopsis} </p>
            </div>

            <div>
                <ul class="cmp__badge-list tag-badge-list">
                    for _, t := range project.Tag {
                        <li> 
                            <a
                                class="tag-badge-list__tag"
                                hx-trigger="click consume"
                                hx-target="#page"
                                hx-get={fmt.Sprintf("%s?tagId=%d", utility.ExploreProjectUrl, t.Id)}
                                href= {fmt.Sprintf("%s?tagId=%d", utility.ExploreProjectUrl, t.Id)} 
                            > {t.Name} </a> 
                        </li>
                    }
                </ul>
            </div>
        </section>

        <section class="cmp__image specification__thumbnail">
            <img src={project.Thumbnail}/>
        </section>

        <div class="lyt__1x2 lyt__1x2--1-3 specification__content">
            <div class="specification__extras">
                <nav class="specification__extra">
                    <b class="u__h u__h--4"> Links </b>
                    if project.Serie != nil {
                        <a
                            href={fmt.Sprintf("/serie/%d", project.Serie.Id)}
                            hx-get={fmt.Sprintf("/serie/%d", project.Serie.Id)}
                            hx-trigger="click"
                            hx-target="#page"
                            hx-push-url="true"
                            hx-replace-url="true"
                            hx-swap="innerHTML"
                        > Featured serie </a>
                    }

                    if len(project.Link) > 0 {
                        for _, l := range project.Link {
                            <a href={l.Url}> {l.DisplayText} </a>
                        }
                    }
                </nav>

                <div class="cmp__sticky">
                    <nav 
                        class="cmp__sticky-elem specification__extra specification__outline"
                        id={fmt.Sprintf("outline-%s", newProjectHTMLIdentifier())}
                    > 
                        <b class="u__h u__h--4"> Outline </b>
                    </nav>
                </div>
            </div>

            <article 
                class="specification__article" 
                id={newProjectHTMLIdentifier()}
            >
                @templ.Raw(project.Description)
            </article>
        </div>

        @onProject()
    </div>
}