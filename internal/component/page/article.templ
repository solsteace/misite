package page

import "github.com/solsteace/misite/internal/entity"
import "fmt"
import "time"
import "github.com/solsteace/misite/internal/component/utility"


func newArticleHTMLIdentifier() string {
    return "main-article"
}

func makeOutlineExpr(articleElemId, targetElem string) string {
    return fmt.Sprintf("MakeOutline('%s', '%s')", articleElemId, targetElem)
}

templ onArticle() {
    @templ.JSUnsafeFuncCall(` window.scroll({ top: 0, left: 0, behavior: "smooth" })`)
    @templ.JSUnsafeFuncCall(makeOutlineExpr(
        newArticleHTMLIdentifier(), 
        fmt.Sprintf("outline-%s", newArticleHTMLIdentifier())))
}

templ Article(article entity.Article) {
    <div class="lyt__1x2 lyt__1x2--1-3 specification">
        <div class="specification__extras">
            <div class="cmp__sticky">
                <nav class="cmp__sticky-elem specification__extra specification__outline"
                    id={fmt.Sprintf("outline-%s", newArticleHTMLIdentifier())} 
                >
                    <b class="u__h--4"> Outline </b>
                </nav>
            </div>
        </div>

        <article id={newArticleHTMLIdentifier()} class="specification__content">
            <header class="specification__content-header">
                <div class="specification__aside u__dim">
                    if diff := time.Now().Sub(article.CreatedAt); diff < time.Hour*24*14 {
                        <p> {fmt.Sprintf("%.0f", diff.Hours() / 24)} days ago </p>
                    } else if diff < time.Hour*24*365{
                        <p> {article.CreatedAt.Format("Jan 02")} </p>
                    } else {
                        <p> {article.CreatedAt.Format("Jan 02, 2006")}</p>
                    }

                    if article.Serie != nil {
                        <p> Â· In </p>
                        <a 
                            href={fmt.Sprintf("/serie/%d", article.Serie.Id)}
                            hx-get={fmt.Sprintf("/serie/%d", article.Serie.Id)}
                            hx-trigger="click consume"
                            hx-target="#page"
                            hx-push-url="true"
                            hx-replace-url="true"
                        >
                            {article.Serie.Name} 
                        </a> 
                    }
                </div>

                <div>
                    <h1> {article.Title} </h1>
                    <p> {article.Subtitle} </p>
                </div>

                <div>
                    <ul class="cmp__badge-list tag-badge-list">
                        for _, t := range article.Tag {
                            <li> 
                                <a
                                    class="tag-badge-list__tag"
                                    href= {fmt.Sprintf("%s?tagId=%d", utility.ExploreArticleUrl, t.Id)} 
                                    hx-get={fmt.Sprintf("%s?tagId=%d", utility.ExploreArticleUrl, t.Id)}
                                    hx-trigger="click consume"
                                    hx-target="#page"
                                    hx-push-url="true"
                                    hx-replace-url="true"
                                > {t.Name} </a> 
                            </li>
                        }
                    </ul>
                </div>
            </header>

            <div>
                @templ.Raw(article.Content)
            </div>
        </article>

        @onArticle()
    </div>
}