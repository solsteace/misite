package page

import "github.com/solsteace/misite/internal/entity"
import "fmt"
import "time"
import "github.com/solsteace/misite/internal/component/utility"


func newArticleHTMLIdentifier() string {
    return "main-article"
}

func makeOutlineExpr(articleElemId, targetElem string) string {
    return fmt.Sprintf("MakeOutline('%s', '%s')", articleElemId, targetElem)
}

templ onArticle() {
    @templ.JSUnsafeFuncCall(` window.scroll({ top: 0, left: 0, behavior: "smooth" })`)
    @templ.JSUnsafeFuncCall(makeOutlineExpr(
        newArticleHTMLIdentifier(), 
        fmt.Sprintf("outline-%s", newArticleHTMLIdentifier())))
}

templ Article(article entity.Article) {
    <div class="specification">
        <section class="specification__header">
            <div class="specification__aside u__dim">
                if diff := time.Now().Sub(article.CreatedAt); diff < time.Hour*24*14 {
                    <p> {fmt.Sprintf("%.0f", diff.Hours() / 24)} days ago </p>
                } else if diff < time.Hour*24*365{
                    <p> {article.CreatedAt.Format("Jan 02")} </p>
                } else {
                    <p> {article.CreatedAt.Format("Jan 02, 2006")}</p>
                }

                if article.Serie != nil {
                    <p> Â· In </p>
                    <p class="article-entry__serie-link" >
                        {article.Serie.Name} 
                    </p> 
                }
            </div>

            <div>
                <h1> {article.Title} </h1>
                <p> {article.Subtitle} </p>
            </div>

            <div>
                <ul class="cmp__badge-list tag-badge-list">
                    for _, t := range article.Tag {
                        <li> 
                            <a
                                class="tag-badge-list__tag"
                                hx-trigger="click consume"
                                hx-target="#page"
                                hx-get={fmt.Sprintf("%s?tagId=%d", utility.ExploreArticleUrl, t.Id)}
                                href= {fmt.Sprintf("%s?tagId=%d", utility.ExploreArticleUrl, t.Id)} 
                            > {t.Name} </a> 
                        </li>
                    }
                </ul>
            </div>
        </section>

        <section class="cmp__image specification__thumbnail">
            <img src={article.Thumbnail}/>
        </section>

        <div class="lyt__1x2 lyt__1x2--1-3 specification__content">
            <div class="specification__extras">
                <div class="cmp__sticky">
                    <nav class="cmp__sticky-elem specification__extra specification__outline"
                        id={fmt.Sprintf("outline-%s", newArticleHTMLIdentifier())} 
                    >
                        <b class="u__h u__h--4"> Outline </b>
                    </nav>
                </div>
            </div>

            <article
                class="specification__article"
                id={newArticleHTMLIdentifier()}
            >
                @templ.Raw(article.Content)
            </article>

            @onArticle()
        </div>
    </div>
}